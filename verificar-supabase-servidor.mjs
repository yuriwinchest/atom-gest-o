// Verificar qual Supabase o servidor est√° usando
import fs from 'fs';

console.log('üîç Verificando configura√ß√£o do Supabase no servidor...\n');

// 1. Verificar server/supabase.ts
console.log('üìÑ Verificando server/supabase.ts:');
try {
  const supabaseFile = fs.readFileSync('server/supabase.ts', 'utf8');

  // Procurar pela URL
  const urlMatch = supabaseFile.match(/SUPABASE_URL['"]\s*\|\|\s*['"]([^'"]+)['"]/);
  const keyMatch = supabaseFile.match(/SUPABASE_ANON_KEY['"]\s*\|\|\s*['"]([^'"]+)['"]/);

  if (urlMatch) {
    console.log('   URL encontrada:', urlMatch[1]);

    if (urlMatch[1].includes('xwrnhpqzbhwiqasuywjo')) {
      console.log('   ‚úÖ URL CORRETA!');
    } else if (urlMatch[1].includes('fbqocpozjmuzrdeacktb')) {
      console.log('   ‚ùå URL ERRADA! Est√° usando o projeto antigo!');
    }
  }

  if (keyMatch) {
    console.log('   Key encontrada:', keyMatch[1].substring(0, 50) + '...');
  }
} catch (err) {
  console.log('   ‚ùå Arquivo n√£o encontrado ou erro ao ler');
}

// 2. Verificar package.json
console.log('\nüìÑ Verificando package.json (npm run dev):');
const packageJson = JSON.parse(fs.readFileSync('package.json', 'utf8'));
const devScript = packageJson.scripts.dev;

if (devScript.includes('xwrnhpqzbhwiqasuywjo')) {
  console.log('   ‚úÖ package.json est√° com URL CORRETA');
} else if (devScript.includes('fbqocpozjmuzrdeacktb')) {
  console.log('   ‚ùå package.json est√° com URL ERRADA');
}

console.log('\n' + '='.repeat(60));
console.log('üìå DIAGN√ìSTICO:');
console.log('   O servidor est√° tentando acessar o projeto ERRADO do Supabase');
console.log('   onde as tabelas N√ÉO existem!');
console.log('\n   Projeto CORRETO: xwrnhpqzbhwiqasuywjo (onde criamos as tabelas)');
console.log('   Projeto ERRADO: fbqocpozjmuzrdeacktb (sem tabelas)');
