/**
 * Componente de Rota Privada - Controle de Acesso
 * PrivateRoute.tsx - ProteÃ§Ã£o contra acesso nÃ£o autorizado
 * Redireciona usuÃ¡rios nÃ£o autenticados para pÃ¡gina inicial
 */

import React from 'react';
import { useAuth } from '@/contexts/AuthContext';
import { useLocation } from 'wouter';
import { useEffect } from 'react';

interface PrivateRouteProps {
  children: React.ReactNode;
  requireAdmin?: boolean;
}

export function PrivateRoute({ children, requireAdmin = false }: PrivateRouteProps) {
  const { user, isAuthenticated } = useAuth();
  const [, setLocation] = useLocation();

  useEffect(() => {
    // Redirecionar se nÃ£o estiver autenticado
    if (!isAuthenticated) {
      console.log('ğŸ”’ Acesso negado - usuÃ¡rio nÃ£o autenticado, redirecionando para pÃ¡gina inicial');
      setLocation('/');
      return;
    }

    // Redirecionar se requer admin mas usuÃ¡rio nÃ£o Ã© admin
    if (requireAdmin && user?.role !== 'admin') {
      console.log('ğŸ”’ Acesso negado - requer permissÃµes de administrador');
      setLocation('/');
      return;
    }
  }, [isAuthenticated, user, requireAdmin, setLocation]);

  // NÃ£o renderizar nada se nÃ£o estiver autenticado
  if (!isAuthenticated) {
    return (
      <div className="flex items-center justify-center min-h-screen">
        <div className="text-center">
          <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-4"></div>
          <p className="text-gray-600">Verificando autenticaÃ§Ã£o...</p>
        </div>
      </div>
    );
  }

  // NÃ£o renderizar nada se requer admin mas usuÃ¡rio nÃ£o Ã© admin
  if (requireAdmin && user?.role !== 'admin') {
    return (
      <div className="flex items-center justify-center min-h-screen">
        <div className="text-center">
          <h2 className="text-xl font-semibold text-red-600 mb-2">Acesso Negado</h2>
          <p className="text-gray-600">VocÃª nÃ£o tem permissÃ£o para acessar esta pÃ¡gina.</p>
        </div>
      </div>
    );
  }

  return <>{children}</>;
}